[
{
	"uri": "http://nodeconfeubadge.org/challenges/hello-world-screen/",
	"title": "Hello World on screen",
	"tags": [],
	"description": "",
	"content": " Challenge 1 This challenge is just to get you warmed up and comfortable using the Web IDE. See if you can display \u0026ldquo;Hello World\u0026rdquo; on the badge\u0026rsquo;s screen.\nCheck out the Espruino site to see what you can do with Graphics and Fonts.\n"
},
{
	"uri": "http://nodeconfeubadge.org/getting-started/unlocking-your-badge/",
	"title": "Unlocking Your Badge",
	"tags": [],
	"description": "",
	"content": "There\u0026rsquo;s a lot more to your badge\u0026rsquo;s software than you realise. Try this:\n Up Up Down Down Left Right Left Right B A  (Yup the Konami code!)\n"
},
{
	"uri": "http://nodeconfeubadge.org/getting-started/",
	"title": "Getting Started",
	"tags": [],
	"description": "",
	"content": " Chapter 1 Getting Started Lets get you setup with accessing the secret menus, connecting to your badge over Bluetooth and getting Hello World running.\n"
},
{
	"uri": "http://nodeconfeubadge.org/getting-started/built-in-software/",
	"title": "Built-in Software",
	"tags": [],
	"description": "",
	"content": "Now that you\u0026rsquo;ve unlocked the badge (you\u0026rsquo;ll have to do this any time you remove the battery), you can explore the built in sample apps. Out of the box, your badge has the following:\n Your name pre-flashed into the firmware Image display cycling Selectable menus T-Rex who has escaped the Chrome browser Flappy Bird The world\u0026rsquo;s most awkward on-board REPL Etch-a-sketch  Source code for all of these is of course in the Github Repo. More details on these and other samples are here.\n"
},
{
	"uri": "http://nodeconfeubadge.org/challenges/",
	"title": "Challenges",
	"tags": [],
	"description": "",
	"content": " Chapter 1 Try all of these challenges! You\u0026rsquo;ll start with Hello World and hopefully by Wednesday you\u0026rsquo;ll have a giant P2P badge network running.\nTry combining multiple challenges into one codebase.\n Hello World on screen Detect Button press Detect capacitive touch Add LEDs and flash them Add a Buzzer/Speaker and play music Implement your own on-screen menu Broadcast a different NFC URL Broadcast an Eddystone and iBeacon message Use Noble and Node.js on your laptop to read the beacon data\n Turn the Badge into HID buttons for your PC. Create and display your own images Implement Web Bluetooth with the Puck.js library Detect movement with a PIR sensor Connect to a BLE LED Lightbulb Connect to a BLE LED Strip Communicate with another badge Communicate with some other Bluetooth devices Implement DAT protocol on Espruino  Advanced tools There are several mobile apps from Nordic Semiconductor that you may find useful in any challenges that use Bluetooth. nRF toolbox can also be used to update the badges firmware or re-flash a badge that you have messed up.\nAndroid  nRF Connect nRF Toolbox  iOS  nRF Connect nRF Toolbox  "
},
{
	"uri": "http://nodeconfeubadge.org/challenges/detect-button-press/",
	"title": "Detect Button Press",
	"tags": [],
	"description": "",
	"content": " Challenge 2 Reading the instantaneous value of a button is easy (see the getting started docs) but how do you deal with debouncing so it\u0026rsquo;s reliable?\nWhat about more than one button being pressed at the same time?\nHelp is at hand on the Espruino site.\nButtons are a great example of how you write event-driven code with Espruino rather than the more traditional read-loops that people starting on Arduino tend to use.\n"
},
{
	"uri": "http://nodeconfeubadge.org/challenges/detect-capacitive-touch/",
	"title": "Detect Capacitive Touch",
	"tags": [],
	"description": "",
	"content": " Challenge 3 It\u0026rsquo;s very easy to read a capacitance value from the 6 lanyard holes in the badge. Experiment with the code and how the badge responds to touch. Then come up with a use for it. Perhaps related to LEDs on the on-screen display?\nSee the getting started area for the relevant API call.\n"
},
{
	"uri": "http://nodeconfeubadge.org/challenges/flash-leds/",
	"title": "Flash LEDs",
	"tags": [],
	"description": "",
	"content": " Challenge 4 It\u0026rsquo;s very easy to add LEDs to the 6 corners of your badge. In fact you probably don\u0026rsquo;t even have to solder them. Just stick them in with the short leg oriented to the squared off side of each white circle.\nThen try turning them on and off (hint: check the getting started pages). How about some timer-based patterns too? Or controlling them with the buttons?\nNote: The low-power nature of the badge means that if you light all LEDs together they\u0026rsquo;ll be quite dim and you\u0026rsquo;ll burn through the battery much more quickly.\n"
},
{
	"uri": "http://nodeconfeubadge.org/getting-started/connecting-to-the-badge/",
	"title": "Connecting to the Badge",
	"tags": [],
	"description": "",
	"content": " Any modern computer with Bluetooth 4+ should be able to connect to the badge as follows:\nMake your badge connectable  Enter the Konami code, if you haven\u0026rsquo;t already: Up, Up, Down, Down, Left, Right, Left, Right, B, A. Select \u0026ldquo;Make badge connectable\u0026rdquo; in the menu Note the Badge ID  Mac Web Bluetooth on Chrome should just work if your Chrome is up to date. So simply go to the Web IDE here. Then:\n Click the connect icon in the top left corner Select the Web Bluetooth option If more than one badge is listed, select your badge ID Click Pair A few seconds later you\u0026rsquo;ll have a REPL running and you can run JS directly on your badge over Bluetooth!  Windows The easiest option is to install the standalone Electron-based Espruino IDE. Download it from here\n If your\u0026rsquo;re using Windows 8.1, or 10 you\u0026rsquo;ll need to pair your Badge using the Windows Bluetooth menu before it\u0026rsquo;ll appear in the Web IDE. (Any time you remove the badge battery, you\u0026rsquo;ll have to remove the Badge from the list of paired devices in Windows and re-pair) Run the IDE Click the connect icon in the top left corner Select the Web Bluetooth option If more than one badge is listed, select your badge ID Click Pair A few seconds later you\u0026rsquo;ll have a REPL running and you can run JS directly on your badge over Bluetooth!  Linux / iOS / Android  See instructions here  More setup (and general) information is available on the Puck.js site if you get stuck. Most, but not all, of the information applies to the badge.\n"
},
{
	"uri": "http://nodeconfeubadge.org/challenges/play-music-with-buzzer/",
	"title": "Play Music with Buzzer",
	"tags": [],
	"description": "",
	"content": " Challenge 5 We have lots of buzzers at the Hacking Station. You just have to solder the red wire to one of the D0-D8 holes on the edge of the badge and the black wire to one of the Ground (-) holes.\nThen impress everyone with your groovy tunes using the APIs here.\n"
},
{
	"uri": "http://nodeconfeubadge.org/getting-started/hello-world-console/",
	"title": "Hello World on the Console",
	"tags": [],
	"description": "",
	"content": "Of course we start with Hello World. Follow the connection instructions, then click on the left hand side of the IDE and type:\nconsole.log(\u0026quot;Hello World\u0026quot;);  Now stop and think for a minute about what just happened there in terms of communications flow.\nYou should try out other aspects of the Web IDE. It has full auto-complete in the REPL window including Button/LED names and functions.\nYou could also try the built-in Blockly graphical editor which is very similar to Scratch.\nAny Espruino code you find here or elsewhere online can be pasted into the editor on the right-hand-side of the IDE and then sent to the badge over Bluetooth for execution. The editor has basic parsing and can flag common errors.\n"
},
{
	"uri": "http://nodeconfeubadge.org/challenges/on-screen-menu/",
	"title": "On-Screen Menu",
	"tags": [],
	"description": "",
	"content": " Challenge 6 If you implement an on-screen menu with up-down-left-right-select then you could have lots of your challenges on the badge at the same time and demo them to people. Have a look at the github repo for the sample code.\n"
},
{
	"uri": "http://nodeconfeubadge.org/getting-started/other-code-samples/",
	"title": "Other Code Samples",
	"tags": [],
	"description": "",
	"content": " There are three places you can find code to learn from and use:\n The Badge repo The main Espruino site The Puck.js area of the Espruino site  Badge Repo Code The pre-installed main.js code is a treasure trove of useful snippets. Note however that it\u0026rsquo;s too big to be uploaded in its entirety via the Web IDE.\n Pre-installed badge code  Games Relive your original Gameboy, Nokia and video arcade days with the following games :-)\n Flappy Bird Snake Simple Mario Asteroids Click speed counter T-Rex  Web Bluetooth  Retrieve all images stored on a badge Take a picture with getUserMedia and put it on the badge  Misc  Check out the world\u0026rsquo;s most awkward REPL\n Learn how to display a Menu\n Dazzle everyone with your artistic skills on an Etch-a-sketch\n  "
},
{
	"uri": "http://nodeconfeubadge.org/challenges/broadcast-nfc-url/",
	"title": "Broadcast NFC URL",
	"tags": [],
	"description": "",
	"content": " Challenge 7 This is an easy one. Change the NFC URL that your badge transmits. Find someone with a Samsung Galaxy or similar phone to test it.\n"
},
{
	"uri": "http://nodeconfeubadge.org/getting-started/accessing-hardware-features/",
	"title": "Accessing Hardware Features",
	"tags": [],
	"description": "",
	"content": " This is an Open Source Hardware project. Schematics and board design files are available in the /hardware directory of the repo.\nThe badge uses the same core module as the Puck.js and can run most of the same software.\nHardware Features include:\n nRF52832 SoC - 64MHz ARM Cortex M4, 64kB RAM, 512kB Flash, running the Espruino stack Bluetooth Low Energy Powered by a CR2032 battery which can last up to a week depending on what code you are running Daylight-readable LCD screen 6 input buttons Capacitive touch sensors on all 6 corners Prototyping area with 8 CPU pins accessible Holes for LEDs on all 6 corners NFC antenna SWD programming pins  CPU Pins (Vertical line of holes along left hand edge of badge) You write to or read from a pin with:\ndigitalWrite(pin, value); digitalRead(pin);  where pin is one of D0, D1, D2, D3, D4, D5, D6, D7, D8 (D0 at top) and value is 0 or 1.\nThe firmware has some extra API calls and variables for some of the badge features. You can use them as follows:\nButtons You can use a generic call like\ndigitalRead(button);  where button is one of BTNA, BTNB, BTNU, BTND, BTNL, BTNR\nor with a Button-specific call\nBTNx.read();  where BTNx is one of BTNA, BTNB, BTNU, BTND, BTNL, BTNR\nLEDs If you add LEDs to the corner holes, you can turn them on/off with a generic call\ndigitalWrite(led, value);  where led is one of LED1, LED2, LED3, LED4, LED5, LED6.\nor with an LED-specific call\nLEDx.write(value);  where LEDx is one of LED1, LED2, LED3, LED4, LED5, LED6 and value is 0 or 1.\nGraphics In many Espruino examples on the main site, you\u0026rsquo;ll find setup code for different types of screens. That has already been taken care of for you on the badge and you can just access the graphics functions directly. e.g.\ng.clear(); g.drawString(\u0026quot;Hello World\u0026quot;,0,0); g.flip();  Capacitive Sense You can read the capacitance (and hence touch) from the 6 corners using\nBadge.capSense(corner);  where corner is one of CORNER1, CORNER2, CORNER3, CORNER4, CORNER5, CORNER6.\nBattery Percentage You can get an estimate of the battery level by calling\nBadge.getBatteryPercentage();  It returns an approximate battery percentage remaining based on a normal CR2032 battery (2.8 - 2.2v).\nSet Screen Contrast You can set the screen contrast with\nBadge.setContrast(c)  where c is a float from 0 to 1\nNFC You can set the URL that the NFC antenna broadcasts to NFC-capable phones by calling\nNRF.nfcURL(\u0026quot;url\u0026quot;)  where URL is something like https://www.nearform.com\nNOTE: If your phone is having difficulty picking up the NFC URL, it is likely that the tuning capacitors on your badge need to be changed to different values. Head on over to the Hacking Lounge to get them replaced or be shown how to do it yourself.\nAdvanced Only: Flashing updated firmware If you need to flash new firmware to the badge, you must first put it in DFU mode by holding BTNA as you insert the battery and quickly letting go of BTNA. Download the Distribution Packet Zip file containing the new firmware to your phone and use nRF Toolbox on either Android or iOS to send it to the badge.\nPlease only do this if you are sure you need it. By using a stock badge build from the Espruino site, you\u0026rsquo;ll lose the built-in NodeConf EU main.js code and will just have a REPL over Bluetooth on your badge.\n"
},
{
	"uri": "http://nodeconfeubadge.org/challenges/broadcast-beacons/",
	"title": "Broadcast Beacons",
	"tags": [],
	"description": "",
	"content": " Challenge 8 Broadcast a URL over Bluetooth LE using Eddystone and/or iBeacon and pick it up on your phone (Android for Eddystone, iPhone for iBeacon).\nYou\u0026rsquo;ll get lots of guidance on the Puck.js site here for Eddystone and here for iBeacon.\n"
},
{
	"uri": "http://nodeconfeubadge.org/getting-started/using-prototyping-area/",
	"title": "Using the prototyping area",
	"tags": [],
	"description": "",
	"content": " You can add whatever hardware you like to the prototyping area. It\u0026rsquo;s where you\u0026rsquo;ll be connecting extra LEDs, buzzers etc. The column of holes along the board\u0026rsquo;s left edge are connected to pins D0 to D8, Ground and Power. However all of the other holes in that grid are unconnected and can be used to attach your components together.\nAs always, the Espruino web-site has lots more info and examples.\nPin/Hole behaviour The edge holes and the corner holes each have slightly different capabilities as follows:\n### Proto pins\n 0 - Digital I/O Only 1 - Digital I/O Only 2 - Digital I/O and Analogue-in (ADC) 3 - Digital I/O and Analogue-in (ADC) 4 - Digital I/O and Analogue-in (ADC) 5 - Digital I/O and Analogue-in (ADC) 6 - Digital I/O Only 7 - Digital I/O and Serial TX 8 - Digital I/O and Serial RX  Corners  1 - Digital I/O Only 2 - Digital I/O Only 3 - Digital I/O Only 4 - Digital I/O and Analogue-in (ADC) 5 - Digital I/O and Analogue-in (ADC) 6 - Digital I/O and Analogue-in (ADC)  Board layout This shows the basic board layout:\n"
},
{
	"uri": "http://nodeconfeubadge.org/challenges/use-noble-on-laptop/",
	"title": "Use Noble on Laptop",
	"tags": [],
	"description": "",
	"content": " Challenge 9 Use the Node.js Bluetooth library Noble on your laptop to read the beacon data that you are transmitting from the earlier challenge.\n"
},
{
	"uri": "http://nodeconfeubadge.org/challenges/use-badge-for-hid/",
	"title": "Use the Badge as a HID Button",
	"tags": [],
	"description": "",
	"content": " Challenge 10 HID means Human Interface Device and it\u0026rsquo;s a standard for connecting Bluetooth input devices like keyboards and mice to computers. Your badge can act as a HID button for your laptop including multimedia keys. You could even use it as a clicker for your talk at NodeConf!\nCheck out the instructions here and try it out for yourself.\nNote: Bluetooth HID can\u0026rsquo;t be enabled on an active connection. To make it work you need to upload the code, disconnect, and then reconnect with your Operating System\u0026rsquo;s Bluetooth pairing functionality.\n"
},
{
	"uri": "http://nodeconfeubadge.org/challenges/display-an-image/",
	"title": "Display an Image",
	"tags": [],
	"description": "",
	"content": " Challenge 11 You can see that we took all of your names and turned them into images that were included as part of the software of each badge. A different image for every badge. Your challenge is to do something similar. Find an image somewhere, convert it into the correct format and display it on the badge. You\u0026rsquo;ll have lots of fun with Imagemagick outputting blank images or inverted ones :-)\nTo get started, have a look at the end of this page or at the nasty hacky code we created to generate all the badge images.\nRemember the badge is 128x64 monochrome.\n"
},
{
	"uri": "http://nodeconfeubadge.org/challenges/create-web-bluetooth-page/",
	"title": "Create a Web Bluetooth Page",
	"tags": [],
	"description": "",
	"content": " Challenge 12 Implement a webpage that uses Web Bluetooth with the Puck.js library. Start simple and turn on/off an LED on your badge.\nEventually make it retrieve your last tweet from the Twitter API and then display it on the badge screen.\nLots of information about web Bluetooth and Espruino here.\n"
},
{
	"uri": "http://nodeconfeubadge.org/challenges/detect-person-with-pir-sensor/",
	"title": "Detect movement with a PIR Sensor",
	"tags": [],
	"description": "",
	"content": " Challenge 13 We have a small number of PIR sensors at the Hacking Table. You can easily wire one of them up to your badge so it can detect motion. Now think of ways you could use that at an event.\nYou can get started with the code here.\n"
},
{
	"uri": "http://nodeconfeubadge.org/challenges/connect-to-ble-lightbulb/",
	"title": "Connect to BLE Lightbulb",
	"tags": [],
	"description": "",
	"content": " Challenge 14 See if you can connect the Badge to the BLE Lightbulb on the table in the hacking lounge and change its colours.\nThis is an advanced task and may involve installing the LED light\u0026rsquo;s mobile app and using the Nordic Semiconductor mobile apps to read changes in the parameters on the light.\nYou can get guidance here and here but they may not contain a solution specific to this lightbulb.\n"
},
{
	"uri": "http://nodeconfeubadge.org/challenges/connect-to-ble-led-strip/",
	"title": "Connect to BLE LED Strip",
	"tags": [],
	"description": "",
	"content": " Challenge 15 See if you can connect the Badge to the BLE LED Strip on the table in the hacking lounge and change its colours.\nThis is a very advanced task and may involve installing the LED strip\u0026rsquo;s mobile app and using the Nordic Semiconductor mobile apps to read changes in the parameters on the strip.\nYou can get guidance here and here but they do not contain a solution specific to this strip.\n"
},
{
	"uri": "http://nodeconfeubadge.org/challenges/communicate-with-another-badge/",
	"title": "Communicate with another Badge",
	"tags": [],
	"description": "",
	"content": " Challenge 16 This is another advanced challenge. We recommend starting with the instructions here and then decide if you want to continue.\nAlso consider the new BLE mesh networking standard which is currently not supported on Espruino but would make for an impressive community contribution.\n"
},
{
	"uri": "http://nodeconfeubadge.org/challenges/communicate-with-other-ble-device/",
	"title": "Communicate with another Device",
	"tags": [],
	"description": "",
	"content": " Challenge 17 If you can get your hands on some other BLE device like a Garmin, Fitbit or Milestone, see if you can figure out the protocol.\nIf you figure it out, write a blogpost about it!\nSome of these devices may require registering on the relevant developer sites. However we may have some other Bluetooth devices on the Hacking Table which are easier to communicate with.\n"
},
{
	"uri": "http://nodeconfeubadge.org/challenges/record-and-playback-sound/",
	"title": "Record and Playback Sound",
	"tags": [],
	"description": "",
	"content": " Challenge 17 Record some sound using the \u0026ldquo;buzzer\u0026rdquo; and play it back.\nInformation on recording using the Waveform class can be found here.\n"
},
{
	"uri": "http://nodeconfeubadge.org/challenges/implement-dat-protocol/",
	"title": "Implement Dat Protocol",
	"tags": [],
	"description": "",
	"content": " Challenge 18 We\u0026rsquo;re kidding.\nOr are we?\nWhat sort of P2P messaging system could be created by all the badges at the event? Without burning through the battery in 5 minutes.\n"
},
{
	"uri": "http://nodeconfeubadge.org/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " NodeConf EU 2017 Badge Welcome!\nWe hope you are as excited as we are about your attendee badge this year. We\u0026rsquo;ve spent the past few months designing and preparing it for the event.\nThe Badge The open source hardware badge contains a small but powerful Bluetooth LE module running Espruino software, which is a JavaScript interpreter optimised for low-power devices. On this site, we\u0026rsquo;ll explain the basics of using and programming the badge and even how to add hardware to it.\nGetting Started In the Getting Started section we give you all the details of:\n Unlocking the badge The built-in software features Connecting to the badge Hello World on the console Other code samples to learn from The hardware features Board prototype area (including the pin-out)  Your Challenges We have a large set of challenges for you to get maximum use of the badge and learn lots in the process.\nThe Grand Challenge For a chance to win a ticket to next year’s NodeConf EU 2018, we have a grand challenge. Any attendee can enter. There are no limits on what you can do but it must make use of the Badge. It can be software, hardware or a mix of both. It can involve Bluetooth but doesn’t have to.\nAnyone who wishes to enter must demo their completed entry between 4.30pm and 5pm on Wednesday in the Hacking Lounge to the judges.\nThe winner will be announced at the Closing Party dinner and on @nearform Twitter on Wednesday night. They and the runners-up will demo what they have created to the crowd.\n"
},
{
	"uri": "http://nodeconfeubadge.org/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://nodeconfeubadge.org/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]